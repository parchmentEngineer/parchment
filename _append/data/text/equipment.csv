Name,Description,Size,Script: On Execute,Gadget,Slots,NEED TOTAL?,Colour,Upgrade,Weaken,Alternate Status Trigger,SFX,Uses?,Cast Backwards?,Single use?,Tags,Witch Spell,Script: Before Combat,Script: After Combat,Script: Before Start Turn,Script: On Start Turn,Script: On any equipment use,Script: On any countdown reduce,Script: End Turn,Script: Before execute,Script: On Snap,Script: On Fury,Script: On Dodge
Protected Index,Do [sword]4 damage[;]|immune to errors,1,attack(4); sfxdamage(target|4);,,EVEN|EVEN,,GRAY,change_power,change_power,,,0,NO,NO,reunion|excludefromrandomlists|errorimmune,,,,,,,,,,,,
Protected Index_upgraded,Do [sword]6 damage[;]|immune to errors,1,attack(6); sfxdamage(target|6);,,EVEN|EVEN,,GRAY,,,,,0,NO,NO,reunion|excludefromrandomlists|errorimmune,,,,,,,,,,,,
Protected Index_downgraded,Do [sword]2 damage[;]|immune to errors,1,attack(2); sfxdamage(target|2);,,EVEN|EVEN,,GRAY,,,,,0,NO,NO,reunion|excludefromrandomlists|errorimmune,,,,,,,,,,,,
Risk Portfolio,Do [sword]1 damage[;] plus|[sword]1 per unused tails ([sword]<evar:unusedtails>)|,1,if(simulation) { bonus(-1000); } else { var temp = 1; if(self != null) { if(self.dicepool != null){ if(self.dicepool.length > 0) { for(d in self.dicepool) { if(d.available()) { if(d.basevalue % 2 == 1) temp++; } } } } } attack(temp); sfxdamage(target|temp); e.setvar(~unusedtails~[;]temp-1); },,NORMAL,,RED,change_power,change_power,,,2,NO,NO,reunion|excludefromrandomlists,,e.setvar(~unusedtails~[;]1);,e.setvar(~unusedtails~[;]1);,,e.setvar(~unusedtails~[;]1);,var temp = 1; if(self != null) { if(self.dicepool != null){ if(self.dicepool.length > 0) { for(d in self.dicepool) { if(d.available()) { if(d.basevalue % 2 == 1) temp++; } } } } } e.setvar(~unusedtails~[;]temp);,var temp = 1; if(self != null) { if(self.dicepool != null){ if(self.dicepool.length > 0) { for(d in self.dicepool) { if(d.available()) { if(d.basevalue % 2 == 1) temp++; } } } } } e.setvar(~unusedtails~[;]temp);,,,,,
Risk Portfolio_upgraded,Do [sword]1 damage[;] plus|[sword]1 per unused tails ([sword]<evar:unusedtails>)|,1,if(simulation) { bonus(-1000); } else { var temp = 1; if(self != null) { if(self.dicepool != null){ if(self.dicepool.length > 0) { for(d in self.dicepool) { if(d.available()) { if(d.basevalue % 2 == 1) temp++; } } } } } attack(temp); sfxdamage(target|temp); e.setvar(~unusedtails~[;]temp-1); },,NORMAL,,RED,,,,,-1,NO,NO,reunion|excludefromrandomlists,,e.setvar(~unusedtails~[;]1);,e.setvar(~unusedtails~[;]1);,,e.setvar(~unusedtails~[;]1);,var temp = 1; if(self != null) { if(self.dicepool != null){ if(self.dicepool.length > 0) { for(d in self.dicepool) { if(d.available()) { if(d.basevalue % 2 == 1) temp++; } } } } } e.setvar(~unusedtails~[;]temp);,var temp = 1; if(self != null) { if(self.dicepool != null){ if(self.dicepool.length > 0) { for(d in self.dicepool) { if(d.available()) { if(d.basevalue % 2 == 1) temp++; } } } } } e.setvar(~unusedtails~[;]temp);,,,,,
Risk Portfolio_downgraded,Do [sword]1 damage|,1,attack(1); sfxdamage(target|1);,,NORMAL,,RED,,,,,2,NO,NO,reunion|excludefromrandomlists,,e.setvar(~unusedtails~[;]1);,e.setvar(~unusedtails~[;]1);,,e.setvar(~unusedtails~[;]1);,var temp = 1; if(self != null) { if(self.dicepool != null){ if(self.dicepool.length > 0) { for(d in self.dicepool) { if(d.available()) { if(d.basevalue % 2 == 1) temp++; } } } } } e.setvar(~unusedtails~[;]temp);,var temp = 1; if(self != null) { if(self.dicepool != null){ if(self.dicepool.length > 0) { for(d in self.dicepool) { if(d.available()) { if(d.basevalue % 2 == 1) temp++; } } } } } e.setvar(~unusedtails~[;]temp);,,,,,
